对象是带有属性和方法的特殊数据类型：
对象名.属性名称
对象名.方法名称（参数表）

js常用的内置对象：

Array：用于在单独的变量名中存储一系列的值（数组）

Date：用于操作日期和时间

String：用于支持对字符串的处理

Math：用于执行常用的数学任务，他包含了若干个数字常量和函数


Array(数组)对象：
数组：具有相同数据类型的一个或多个值的集合
如："前端"，"js"，"html"
var 数组名称= ["前端","js","html"];

创建数组
数组对象用来在单独的变量名中存储一系列的值
var 数组名称 = new Array（size（表示数组中可存放的元素总数））；
var week = new Array(7);
JavaScript中的数组用一个名称存储一系列的值，用下标区分数组中的每个值，数组的下标从0开始；

数组赋值：
声明时赋值 var week = new Array("星期一"，"星期二"......);
分别赋值
var week = new Array(7（可以省略，可以添加任意多的值）);
    week[0] = "星期日";
    week[1] = "星期一";
    week[2] = "星期二";
    week[3] = "星期三";

通过数组的名称和下标直接访问数组的元素
数组名[下标（下标从0开始）]

可以使用for-in循环输出数组元素

数组常用的方法和属性：
属性：
length：设置或返回数组中元素的数目 
方法：
join():把数组中所有的元素放入一个字符串，通过一个分隔符进行分隔

sort():对数组排序(按照字母顺序来进行排列/字符编码的顺序来进行排列)

push():向数组末尾添加一个或更多元素，并返回新的长度

concat()：合并两个数组

遍历数组：
let arr = [1,2,3,4]
for(key in arr){
    console.log(arr[key])
}
arr.forEach(function(v,k))

Date对象：
使用Date对象来获取 时,分，秒，年，月，日

Date对象用来处理日期和时间：
var 日期对象 = new Date(参数)
参数格式：MM(月),DD(日),YYYY(年),hh(时)：mm(分)：ss(秒)

var today = new Date();  //返回当前日期时间
var tdate = new Date("9 1,2017,14:58:12");

常用方法：
getDate():返回Date对象的一个月中的每一天，其值介于1~31之间
getDay()：返回Date对象的星期中的每一天，其值介于0~6之间（注：0-周日）
getHours()：返回Date对象的小时数，其值介于0~23之间
getMinutes():返回Date对象的分钟数，其值介于0~59之间
getSeconds():返回Date对象的秒数，其值介于0~59之间
getMonth():返回Date对象的月份，其值介于0~11之间(注：0-1月份)
getFullYear():返回Date对象的年份，其值为4位数


String对象：
string对象用于处理文本(字符串)
var 字符串对象 = new string(参数)
参数是要存储在String对象中或转换成原始字符串的值

var str = new String("kgc");
String常用方法和属性:
属性：
length：字符串的长度
方法：
charAt():返回在指定位置的字符(注：字符串第一个字符的下标是0)

concat():连接字符串

replace():用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的字串

split():把一个字符串分割成字符串数组

indexOf():返回某个指定的字符串值在字符串中首次出现的位置(找不到返回-1)

lastIndexOf():返回一个指定的字符串最后出现的位置（找不到返回-1）

match():可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配(返回的是指定的值，而不是位置，找不到返回null)

toLowerCase():把字符串转换为小写

toUpperCase():把字符串转换为大写

substr():从起始索引号提取字符串中指定数目的字符(不建议使用)

substring()：提取字符串中两个指定的索引号之间的字符(包括开始位置的字符，不包括结束位置的字符，如果不加结束位置则从当前位置提取到结束位置)

slice():提取字符串的某个部分，并以新的字串符返回被提取的部分（允许用负数作为参数，当使用负数的时候会从结束位置开始）

Math对象：
用于执行数学任务
常用方法：
ceil():对数进行上舍入
Math.ceil(25.5);返回26；
Math.ceil(-25.5);返回-25；

floor():对数进行下舍入
Math.floor(25.5);返回25；
Math.floor(-25.5);返回-26

round():把数四舍五入为最接近的数
Math.round(25.5);返回26；
Math.round(-25.5);返回-26;

random():返回0.0~1.0之间的随机数
Math.random();例如：0.6273608814137365